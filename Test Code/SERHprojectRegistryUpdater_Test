@isTest
public class SERHprojectRegistryUpdater_Test {
    private static Integer listLength = 0;
    /**
    @testSetup
    static void setup(){
        String username = 'southface-api';
        String password = 'wYFUCL5z';
        Blob headerValue = Blob.valueOf(username + ':' + password);
        String authorization = ('Basic ' + EncodingUtil.base64Encode(headerValue));
        
        Map<String, String> projectMap = new Map<String, String>();
        List<string> types = new List<string>();
        for(Project__c existingProject : [Select Ekotrope_ID__c, Ekotrope_selfOrPlanLastSavedAt__c FROM Project__c])
        {projectMap.put(existingProject.Ekotrope_ID__c, existingProject.Ekotrope_selfOrPlanLastSavedAt__c);}
            
        String newProjectsList = String.valueOf(EkotropeAPIconnector_DP.getprojectList(authorization, 'SUBMITTED_FOR_QA').getBody());
        List<projectListJSON2Apex> newProjects = projectListJSON2Apex.parse(newProjectsList);
        List<Object> newResults = (List<Object>)JSON.deserializeUntyped(newProjectsList);
        listLength = newResults.size();
        System.debug(listLength);
        
    }
    **/
    @istest static void test(){
                //might have to insert some accounts for lines 108ish
        Account testacct = new Account(name='Ecosouth Green Building Services', Ekotrope_ID__c='PKYGl435');
            insert(testacct);
                Contact joeTesta = new Contact(LastName = 'Testa', FirstName = 'Joe', accountid=testacct.id);

        insert(joeTesta);
        //check if RP&S is in there:
        
        system.debug('JoeTestas Id in SF is ' + joeTesta.id + ', Ecousouths id is '+testacct.id);
        Qualifications_del__c joesQual = new Qualifications_del__c(Qualifications_for__c=joeTesta.id, HERS_RTIN_Rater_Identification_Number__c='9740236', SERH_HERS_Rater_or_HERS_Rater_Candidate__c='Yes');
        insert(joesQual);
        insert(new Project__c(recordtypeid='0120B000000t8JVQAY', name='Ray Ter', Ekotrope_Id__c = 'eightdig'));

        Test.startTest();
        //initialize the updater and give it some batches.
        SERHprojectRegistryUpdater updater = new SERHprojectRegistryUpdater();
        updater.setVariables('SUBMITTED_FOR_QA');
        
        list<string> codes = new list<string>();
        codes.add('EnergyStarV3');
      codes.add('IECC2009Performance');
      codes.add('IECC2012Performance');
      codes.add('DOEZeroEnergyReady');
      codes.add('DukeNCHEROPerformance');
        updater.setCodesToCheck(codes);
        updater.setSERHDataName('HERS');
        updater.setBuildingRun('EkotropeAsModeled', 'HERSReference', 'HERSRated');

        Id batchId = Database.executeBatch(updater,30);
        
        
        SERHprojectRegistryUpdater updaterNonReg = new SERHprojectRegistryUpdater();
        updaterNonReg.setVariables('SUBMITTED_FOR_QA');
        updaterNonReg.setNonRegRun(FALSE);
        updaterNonReg.setCodesToCheck(codes);
        updaterNonReg.setSERHDataName('2009 IECC');
        updaterNonReg.setBuildingRun('EkotropeAsModeled', 'HERSReference', 'HERSRated');
        id batchIdnonRegRun = Database.executeBatch(updaterNonReg,30);
        
        Test.stopTest();
        //check the records were updated correctly

        System.debug([select count() from SERH_Data__c where upload_date__c = today]);
    }
    
}
