public class serhRecordConstructor{
    

	public static Project__C constructProject(projectJSON2Apex.aProjectJSON2Apex aProject, analysisJson2Apex.pAnalysisJson2Apex bsIsAnalysisResults, String HERSrater, Id RFI, String ratingOrganization, String status, String updateStatus) {
		Date EC_Registration_Date = Date.newInstance(1999, 1, 1);
        Date Rating_Date = Date.newInstance(1999, 1, 1);
        projectJSON2Apex.aProjectJSON2Apex qProject = aProject;
        analysisJson2Apex.pAnalysisJson2Apex qAnalyis = bsIsAnalysisResults;
        
        integer i = qAnalyis.Compliance.size();
        integer count = 0;
        String energyStar = 'Fail';
        
        while (count < i){
            List<string> codesToCheck = new List<string>();
            If (qAnalyis.Compliance[count].code == 'EnergyStarV3'){
                energyStar = qAnalyis.Compliance[count].complianceStatus;
            }
            count++;
        }
        
        
        if (qProject.hersRatingDetails.ratingDate != null){
                EC_Registration_Date =  Date.newInstance(
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(0,4)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(5,7)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(8,10)));
            }else{
                EC_Registration_Date = null;
            }
            if (qProject.hersRatingDetails.fieldRatingDate != null){
               Rating_Date = Date.newInstance(
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(0,4)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(5,7)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(8,10)));   
            }else{
                Rating_Date = null;
            }
        
        Project__c projectRecord = new Project__c(
            SERH_Number_of_Units__c = 1,
            Name = qProject.location.streetAddress.abbreviate(80),
            Development_Text__c = qProject.community,
            Builder_SERH__c = qProject.builder,
            HERS_Rater__c = HERSrater,
            RemRate_Version__c = 'Ekotrope-' + qProject.algorithmVersion, 
            Rating_Date__c = Rating_Date,
            Ekotrope_URL__c = 'https://app.ekotrope.com/#project:'+qProject.id,
            RESNET_Registry_ID__c = qProject.hersRatingDetails.registryId, 
            Ekotrope_ID__c = qProject.id,
            EC_Registration_Date__c =  EC_Registration_Date,
            Street_Address__c = qProject.location.streetAddress,
            City__c = qProject.location.city,
            State__c = qProject.location.state,
            Zip_Code__c = qProject.location.zip,
            RecordTypeId = '0120B000000t8JVQAY',
            OwnerId = '005U0000001vPx2',
            Ekotrope_selfOrPlanLastSavedAt__c = qProject.selfOrPlanLastSavedAt,
            Rating_Organization__c = ratingOrganization,
            Rating_Field_Inspector__c = RFI,
            Energy_Star_v3__c = energyStar  
        );
        if (status == 'SUBMITTED_TO_REGISTRY'){ //&& updateStatus == 'update status'){
            projectRecord.Project_Status__c = 'Completed';
        } else if(status == 'SUBMITTED_FOR_QA' && updateStatus == 'update status'){
            projectRecord.Project_Status__c = 'In Progress';
        }
        //projectRecord.SERH_Number_of_Units__c = 1;
                
        return projectRecord;
	}
    
    public static SERH_Data__C constructDataRecord(projectJSON2Apex.aProjectJSON2Apex bProject, planJson2Apex.aPlanJson2Apex rplan, analysisJson2Apex.pAnalysisJson2Apex bsIsAnalysisResults,  analysisJson2Apex.pAnalysisJson2Apex RefAnalysisResults,  analysisJson2Apex.pAnalysisJson2Apex DesAnalysisResults, String arecordType) {
        
        projectJSON2Apex.aProjectJSON2Apex qProject = bProject;
        planJson2Apex.aPlanJson2Apex qplan = rplan; 
        analysisJson2Apex.pAnalysisJson2Apex asIsAnalysisResults = bsIsAnalysisResults; 
        analysisJson2Apex.pAnalysisJson2Apex referenceAnalysisResults = RefAnalysisResults; 
        analysisJson2Apex.pAnalysisJson2Apex designAnalysisResults = DesAnalysisResults; 
        String recordType = arecordType;
        Date EC_Registration_Date = Date.newInstance(1999, 1, 1);
        Date Rating_Date = Date.newInstance(1999, 1, 1);
        string masterPlan = null;    
              
        
        if(arecordType == 'HERS'){
            masterPlan = qProject.MasterPlanId;           
        }
        else{
            masterPlan = null;
        }
        
        Double naturalGas = 0;
        Double electric = 0;
        Double oil = 0;
        Double propane = 0;
        Double wood = 0;
        
         if (qProject.hersRatingDetails.ratingDate != null){
                EC_Registration_Date =  Date.newInstance(
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(0,4)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(5,7)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.ratingDate).substring(8,10)));
            }else{
                EC_Registration_Date = null;
            }
            if (qProject.hersRatingDetails.fieldRatingDate != null){
               Rating_Date = Date.newInstance(
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(0,4)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(5,7)),
                    Integer.valueOf(String.valueOf(qProject.hersRatingDetails.fieldRatingDate).substring(8,10)));   
            }else{
                Rating_Date = null;
            }
        
       
        
        //iterate thru all compliance results
            //when it equals each one grab it and write it to the appropriate
            //fields. but how do i iterate throur a 
            
        integer i = AsIsAnalysisResults.Compliance.size();
        integer count = 0;
        String iecc2009 = 'False';
        String iecc2012 = 'False';
        String energyStar = 'False';
        String doeZERH = 'False';
        String dukeHero= 'False';
        
        while (count < i){
            List<string> codesToCheck = new List<string>();
            If (AsIsAnalysisResults.Compliance[count].code == 'IECC2009Performance'){
                iecc2009 = AsIsAnalysisResults.Compliance[count].complianceStatus;
            }
            If (AsIsAnalysisResults.Compliance[count].code == 'EnergyStarV3'){
                energyStar = AsIsAnalysisResults.Compliance[count].complianceStatus;
            }
            If (AsIsAnalysisResults.Compliance[count].code == 'IECC2012Performance'){
                iecc2012 = AsIsAnalysisResults.Compliance[count].complianceStatus;
            }
            If (AsIsAnalysisResults.Compliance[count].code == 'DOEZeroEnergyReady'){
                doeZERH = AsIsAnalysisResults.Compliance[count].complianceStatus;
            }
            If (AsIsAnalysisResults.Compliance[count].code == 'DukeNCHEROPerformance'){
                dukeHero = AsIsAnalysisResults.Compliance[count].complianceStatus;
            }
            count++;
        }
        
         Integer fee = 60;
        
        if(qProject.hersRatingDetails.rater.RatingCompany.id == 'JVYyEeYW'){
            fee = 55;
        } else if(qProject.hersRatingDetails.ratingType == 'Sampled'){
			fee = 30;            
        } else if(qProject.name.containsIgnoreCase('repeat') && energyStar == 'PASS'){//qProject.name.containsIgnoreCase('estar')){
            fee = 50;
        } else if(qProject.name.containsIgnoreCase('repeat') && energyStar != 'PASS'){//!qProject.name.containsIgnoreCase('estar')){
            fee = 45;
        } else if(!qProject.name.containsIgnoreCase('repeat') && energyStar == 'PASS'){//qProject.name.containsIgnoreCase('estar')){
            fee = 65;    
        } else{
            fee = 60;
        }
        
        //asIsAnalysisResults
        
        System.debug(qProject.name+'-'+fee);
        
        
        SERH_Data__c serhRecord = new SERH_Data__c(
            
            name = recordType + '-' + qProject.name.abbreviate(79-recordType.length()),
            Registry_ID__c = qProject.hersRatingDetails.registryId,
            Rating_Date__c = Rating_Date,          
            Registered_Date__c = EC_Registration_Date,
            Upload_Date__c = Date.today(),
            of_Units__c = 1.0,
            Project_Type__c = qplan.Details.residenceType,
            Foundation_Type__c = qplan.thermalEnvelope.foundationType,
            Housing_Type__c = qplan.Details.residenceType,          
            
            ENERGY_STAR_v3__c = energyStar,
            ZERH__c = doeZERH,
            IECC2009_UA__c = iecc2009,
            IECC2012_UA__c = iecc2012,
            
            //Rating_Type__c = not sure where this is in api,
            Software_Version__c = 'Ekotrope-'+qProject.algorithmVersion,
            //Building_Name__c =
            Rating_Type__c = qProject.hersRatingDetails.ratingType,  
            File_Name__c = qProject.name.abbreviate(80),           
            Plan_Name__c = qProject.model,
            Ekotrope_Plan_ID__c = masterPlan,
            HERS_INDEX__c =  AsIsAnalysisResults.hersScore,
            CFA_sqft__c = qplan.thermalEnvelope.summary.conditionedArea,
            Volume_cuft__c = qplan.thermalEnvelope.summary.conditionedVolume,
            BD_Infiltration_Cool__c = qplan.thermalEnvelope.infiltration.cfm50,
            BD_Infiltration_Heat__c = qplan.thermalEnvelope.infiltration.cfm50,
            Invoice_for__c = 'File QA', 
            Fee_per_Unit__c = fee,
            Export_Type__c = recordType,
            BD_Infiltration_Units__c = 'cfm50',
            OwnerId = '005U0000001vPx2',
            CO2_lbs__c = AsIsAnalysisResults.emissions.summary.totalCo2,
            NOX_lbs__c = AsIsAnalysisResults.emissions.summary.totalNox,
            SO2_lbs__c = AsIsAnalysisResults.emissions.summary.totalSo2,
            Cooling_MMBtu__c = AsIsAnalysisResults.energy.summary.coolingConsumption,
            Heating_MMBtu__c = AsIsAnalysisResults.energy.summary.heatingConsumption,
            DHW_MMBtu__c = AsIsAnalysisResults.energy.summary.waterHeatingConsumption, 
            PV_MMBtu__c = AsIsAnalysisResults.energy.summary.solarGeneration,
            LA_MMBtu__c = AsIsAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
            Total_Rated_Consumption_MMBtu__c = AsIsAnalysisResults.energy.summary.coolingConsumption + 
            AsIsAnalysisResults.energy.summary.heatingConsumption +
            AsIsAnalysisResults.energy.summary.waterHeatingConsumption +
            AsIsAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
            
            Electricity_Consumption_kWh__c = 293.07 * (AsIsAnalysisResults.energy.breakdown.byFuel[1].coolingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[1].heatingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[1].lightingAndAppliancesConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[1].waterHeatingConsumption),
            
            Fuel_Oil_Consumption_gallons__c = 7.22 * (AsIsAnalysisResults.energy.breakdown.byFuel[2].coolingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[2].heatingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[2].lightingAndAppliancesConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[2].waterHeatingConsumption), 
            
            Natural_Gas_Consumption_therms__c = 10 * (AsIsAnalysisResults.energy.breakdown.byFuel[0].coolingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[0].heatingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[0].lightingAndAppliancesConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[0].waterHeatingConsumption),
            
            Propane_Consumption_gallons__c = 10.95 *(AsIsAnalysisResults.energy.breakdown.byFuel[3].coolingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[3].heatingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[3].lightingAndAppliancesConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[3].waterHeatingConsumption),
            
            Wood_Consumption_tonnes__c = 0.067 * (AsIsAnalysisResults.energy.breakdown.byFuel[4].coolingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[4].heatingConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[4].lightingAndAppliancesConsumption+
            AsIsAnalysisResults.energy.breakdown.byFuel[4].waterHeatingConsumption),
            
          
            Ref_CO2_Lbs__c = referenceAnalysisResults.emissions.summary.totalCo2,
            Ref_NOX_lbs__C = referenceAnalysisResults.emissions.summary.totalNox,
            Ref_SO2_lbs__C = referenceAnalysisResults.emissions.summary.totalSo2,
            
            Ref_Cooling_MMBtu__c = referenceAnalysisResults.energy.summary.coolingConsumption,
            Ref_Heating_MMBtu__c = referenceAnalysisResults.energy.summary.heatingConsumption,
            Ref_DHW_MMBtu__c = referenceAnalysisResults.energy.summary.waterHeatingConsumption, 
            Ref_PV_MMBtu__c = referenceAnalysisResults.energy.summary.solarGeneration,
            Ref_LA_MMBtu__c = referenceAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
            Ref_Total_Rated_Consumption_MMBtu__c = referenceAnalysisResults.energy.summary.coolingConsumption + 
            referenceAnalysisResults.energy.summary.heatingConsumption +
            referenceAnalysisResults.energy.summary.waterHeatingConsumption +
            referenceAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
           
            Ref_Electricity_Consumption_kWh__c = 293.07 * (referenceAnalysisResults.energy.breakdown.byFuel[1].coolingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[1].heatingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[1].lightingAndAppliancesConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[1].waterHeatingConsumption),
            
            Ref_Fuel_Oil_Consumption_gallons__c = 7.22 * (referenceAnalysisResults.energy.breakdown.byFuel[2].coolingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[2].heatingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[2].lightingAndAppliancesConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[2].waterHeatingConsumption), 
            
            Ref_Natural_Gas_Consumption_therm__c = 10 * (referenceAnalysisResults.energy.breakdown.byFuel[0].coolingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[0].heatingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[0].lightingAndAppliancesConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[0].waterHeatingConsumption),
            
            Ref_Propane_Consumption_gallons__c = 10.95 *(referenceAnalysisResults.energy.breakdown.byFuel[3].coolingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[3].heatingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[3].lightingAndAppliancesConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[3].waterHeatingConsumption),
            
            Ref_Wood_Consumption_tonnes__c = 0.067 * (referenceAnalysisResults.energy.breakdown.byFuel[4].coolingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[4].heatingConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[4].lightingAndAppliancesConsumption+
            referenceAnalysisResults.energy.breakdown.byFuel[4].waterHeatingConsumption), 
              
            Design_CO2_Lbs__c = designAnalysisResults.emissions.summary.totalCo2,
            Design_NOX_lbs__C = designAnalysisResults.emissions.summary.totalNox,
            Design_SO2_lbs__C = designAnalysisResults.emissions.summary.totalSo2,
            
            Design_Cooling_MMBtu__c = designAnalysisResults.energy.summary.coolingConsumption,
            Design_Heating_MMBtu__c = designAnalysisResults.energy.summary.heatingConsumption,
            Design_DHW_MMBtu__c = designAnalysisResults.energy.summary.waterHeatingConsumption, 
            Design_PV_MMBtu__c = designAnalysisResults.energy.summary.solarGeneration,
            Design_LA_MMBtu__c = designAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
            Design_Total_Rated_Consumption_MMBtu__c = designAnalysisResults.energy.summary.coolingConsumption + 
            designAnalysisResults.energy.summary.heatingConsumption +
            designAnalysisResults.energy.summary.waterHeatingConsumption +
            designAnalysisResults.energy.summary.lightingAndAppliancesConsumption,
                      
            Design_Electricity_Consumption_kWh__c = 293.07 * (designAnalysisResults.energy.breakdown.byFuel[1].coolingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[1].heatingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[1].lightingAndAppliancesConsumption+
            designAnalysisResults.energy.breakdown.byFuel[1].waterHeatingConsumption),
            
            Design_Fuel_Oil_Consumption_gallons__c = 7.22 * (designAnalysisResults.energy.breakdown.byFuel[2].coolingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[2].heatingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[2].lightingAndAppliancesConsumption+
            designAnalysisResults.energy.breakdown.byFuel[2].waterHeatingConsumption), 
            
            Design_Natural_Gas_Consumption_therm__c = 10 * (designAnalysisResults.energy.breakdown.byFuel[0].coolingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[0].heatingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[0].lightingAndAppliancesConsumption+
            designAnalysisResults.energy.breakdown.byFuel[0].waterHeatingConsumption),
            
            Design_Propane_Consumption_gallons__c = 10.95 *(designAnalysisResults.energy.breakdown.byFuel[3].coolingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[3].heatingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[3].lightingAndAppliancesConsumption+
            designAnalysisResults.energy.breakdown.byFuel[3].waterHeatingConsumption),
            
            Design_Wood_Consumption_tonnes__c = 0.067 * (designAnalysisResults.energy.breakdown.byFuel[4].coolingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[4].heatingConsumption+
            designAnalysisResults.energy.breakdown.byFuel[4].lightingAndAppliancesConsumption+
            designAnalysisResults.energy.breakdown.byFuel[4].waterHeatingConsumption)
        );
        return serhRecord;
    }
}
